{"version":3,"sources":["webpack:///./src/components/blog-card.tsx","webpack:///./src/components/headerSmall.tsx","webpack:///./src/pages/blog.tsx","webpack:///./src/layouts/index.ts","webpack:///./src/images/default-feature-image.jpg"],"names":["BlogCard","title","reading_time","published_at","excerpt","feature_image","slug","tags","authors","primary_author_name","console","log","month","Date","getMonth","formatted_published_at","getDate","getFullYear","className","to","src","FeatureImage","alt","map","tag","key","name","toUpperCase","author","profile_image","HeaderSmall","subtitle","postListQuery","posts","data","allGhostPost","edges","edge","node","primary_author","slice","post","id","module","exports"],"mappings":"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","file":"component---src-pages-blog-tsx-f2d7d55ab061427de6ed.js","sourcesContent":["import React from 'react'\nimport { Link } from 'gatsby'\n\nimport './blog-card.css'\nimport FeatureImage from 'images/default-feature-image.jpg'\n\ntype BlogCardProps = {\n  title: string\n  reading_time: number\n  published_at: Date\n  excerpt: string\n  feature_image: string\n  slug: String\n  tags: Array<any>\n  primary_author_name: String\n  authors: Array<any>\n}\n\nconst BlogCard = ({\n  title,\n  reading_time,\n  published_at,\n  excerpt,\n  feature_image,\n  slug,\n  tags,\n  authors,\n  primary_author_name\n}: BlogCardProps) => {\n  console.log(feature_image)\n  const months = [\n    'JAN',\n    'FEB',\n    'MAR',\n    'APR',\n    'MAY',\n    'JUN',\n    'JULY',\n    'AUG',\n    'SEPT',\n    'OCT',\n    'NOV',\n    'DEC'\n  ]\n\n  const month = new Date(published_at).getMonth()\n  const formatted_published_at =\n    new Date(published_at).getDate() +\n    ' ' +\n    months[month] +\n    ' ' +\n    new Date(published_at).getFullYear()\n  return (\n    <div className='card mb-2'>\n      <Link to={'/blog/' + slug}>\n        <img\n          src={feature_image == null ? FeatureImage : feature_image}\n          alt='img'\n          className='card-img-top'\n        />\n        <div className='card-body'>\n          {tags.map((tag: any) => (\n            <span className='tag' key='tag.name'>\n              {tag.name.toUpperCase()}\n            </span>\n          ))}\n          <h2>{title}</h2>\n          <p>{excerpt}</p>\n          <section className='post-full-byline-content'>\n            <ul className='author-list'>\n              {authors.map((author: any) => (\n                <li className='author-list-item' key='author.name'>\n                  <div className='author-card'>\n                    <img\n                      className='author-profile-image'\n                      src={author.profile_image}\n                      alt='Ghost'\n                    />\n                    <div className='author-info'>\n                      <div className='bio'>\n                        <h2>{author.name}</h2>\n                      </div>\n                    </div>\n                  </div>\n                  <div className='author-avatar'>\n                    <img\n                      className='author-profile-image'\n                      src={author.profile_image}\n                      alt='Ghost'\n                    />\n                  </div>\n                </li>\n              ))}\n            </ul>\n\n            <section className='post-full-byline-meta'>\n              {/* <h4 className=\"author-name\"><a href=\"/author/ghost/\">{primary_author_name}</a></h4> */}\n              <h4 className='author-name'>{primary_author_name}</h4>\n\n              <div className='byline-meta-content'>\n                <time className='byline-meta-date'>\n                  {formatted_published_at}\n                </time>\n                <span className='byline-reading-time'>\n                  <span className='bull'>â€¢</span> {reading_time} min read\n                </span>\n              </div>\n            </section>\n          </section>\n        </div>\n      </Link>\n    </div>\n  )\n}\n\nexport default BlogCard\n","import * as React from 'react';\nimport './headerSmall.css';\n\ntype HeaderSmallProps = {\n    title: string,\n    subtitle: string\n}\n\nconst HeaderSmall = ({ title, subtitle }: HeaderSmallProps) => {\n    return (\n        <div className=\"header-small\" >\n            <div className=\"container\">\n                <div className=\"jumbotron-fluid\">\n                    <h1 className=\"header-small-title\" > {title} < span className=\"header-small-subtitle\" > {subtitle} </span></h1>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default HeaderSmall;","import React from 'react'\nimport { Link, graphql } from 'gatsby'\nimport { PageLayout } from 'layouts'\nimport { SEO } from 'components'\n\nimport './blog.css'\nimport BlogCard from 'components/blog-card'\nimport HeaderSmall from 'components/headerSmall'\nimport FeatureImage from 'images/default-feature-image.jpg'\n\nexport default ({ data }) => {\n  const posts = data.allGhostPost.edges.map((edge) => edge.node)\n\n  const months = [\n    'JAN',\n    'FEB',\n    'MAR',\n    'APR',\n    'MAY',\n    'JUN',\n    'JULY',\n    'AUG',\n    'SEPT',\n    'OCT',\n    'NOV',\n    'DEC'\n  ]\n\n  const month = new Date(posts[0].published_at).getMonth()\n  const formatted_published_at =\n    new Date(posts[0].published_at).getDate() +\n    ' ' +\n    months[month] +\n    ' ' +\n    new Date(posts[0].published_at).getFullYear()\n\n  return (\n    <PageLayout>\n      <SEO title='Blog' />\n      <HeaderSmall title='cuHacking' subtitle='Blog' />\n      <div className='container'>\n        <div className='card mb-2'>\n          <Link to={posts[0].slug}>\n            <div className='row'>\n              <div className='col-md-6'>\n                <img\n                  src={\n                    posts[0].feature_image == null\n                      ? FeatureImage\n                      : posts[0].feature_image\n                  }\n                  alt='img'\n                  className='card-img-top'\n                />\n              </div>\n              <div className='col-md-6'>\n                <div className='card mb-2'>\n                  <div className='card-body'>\n                    {posts[0].tags ? (\n                      posts[0].tags.map((tag: any) => (\n                        <span className='tag' key='tag.name'>\n                          {tag.name.toUpperCase()}\n                        </span>\n                      ))\n                    ) : (\n                      <span className='tag' key='tag.name'>\n                        {' '}\n                      </span>\n                    )}\n                    <h2>{posts[0].title}</h2>\n                    <p>{posts[0].excerpt}</p>\n                    <section className='post-full-byline-content'>\n                      <ul className='author-list'>\n                        {posts[0].authors.map((author: any) => (\n                          <li className='author-list-item' key='author.name'>\n                            <div className='author-card'>\n                              <img\n                                className='author-profile-image'\n                                src={author.profile_image}\n                                alt='Ghost'\n                              />\n                              <div className='author-info'>\n                                <div className='bio'>\n                                  <h2>{author.name}</h2>\n                                </div>\n                              </div>\n                            </div>\n                            <div className='author-avatar'>\n                              <img\n                                className='author-profile-image'\n                                src={author.profile_image}\n                                alt='Ghost'\n                              />\n                            </div>\n                          </li>\n                        ))}\n                      </ul>\n\n                      <section className='post-full-byline-meta'>\n                        {/* <h4 className=\"author-name\"><a href=\"/author/ghost/\">{primary_author_name}</a></h4> */}\n                        <h4 className='author-name'>\n                          {posts[0].primary_author.name}\n                        </h4>\n\n                        <div className='byline-meta-content'>\n                          <time className='byline-meta-date'>\n                            {formatted_published_at}\n                          </time>\n                          <span className='byline-reading-time'>\n                            <span className='bull'>â€¢</span>{' '}\n                            {posts[0].reading_time} min read\n                          </span>\n                        </div>\n                      </section>\n                    </section>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </Link>\n        </div>\n\n        <div className='row'>\n          {posts.slice(1).map((post: any) => (\n            <div className='col-md-4' key={post.id}>\n              <BlogCard\n                title={post.title}\n                excerpt={post.excerpt}\n                feature_image={post.feature_image}\n                reading_time={post.reading_time}\n                slug={post.slug}\n                published_at={post.published_at}\n                tags={post.tags}\n                primary_author_name={post.primary_author.name}\n                authors={post.authors}\n              />\n            </div>\n          ))}\n        </div>\n      </div>\n    </PageLayout>\n  )\n}\n\nexport const postListQuery = graphql`\n  query {\n    allGhostPost(sort: { order: DESC, fields: published_at }) {\n      edges {\n        node {\n          slug\n          excerpt\n          feature_image\n          primary_author {\n            name\n            profile_image\n          }\n          title\n          primary_tag {\n            name\n          }\n          published_at\n          reading_time\n          authors {\n            profile_image\n            name\n          }\n          tags {\n            name\n          }\n        }\n      }\n    }\n  }\n`\n","export { default as PageLayout } from './pageLayout'\nexport { default as PostLayout } from './postLayout'\n","module.exports = __webpack_public_path__ + \"static/default-feature-image-45061e9536fb0be9bd6b7b10bf42ec6b.jpg\";"],"sourceRoot":""}